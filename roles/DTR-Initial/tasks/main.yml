#- name: Check node for swarm membership (success = joined)
#  shell: docker info | grep 'Swarm:.*inactive' | wc -l
#  register: swarmed
#  failed_when: swarmed.stdout|int == 1
#  ignore_errors: True
#- name: Join swarm as worker (DTR)
#  shell: >
#    docker swarm join --token {{ hostvars[groups['UCP-Initial'][0]]['wrktoken']['stdout'] }} {{ hostvars[groups['UCP-Initial'][0]].ansible_default_ipv4.address }}:2377
#  when: swarmed|failure
- name: Check for existing DTR deployment (success = deployed)
  shell: docker container ls | grep -i dtr | wc -l
  register: deployed
  failed_when: deployed.stdout|int == 0
#  failed_when: "{{ deployed.stdout[0] }} != {{ dtr_bundle_image_count - 1 }}"
  ignore_errors: True
- block:   # Load images if offline install and no existing deployment
  - name: Check node for needed DTR images (success = preloaded)
    shell:
      docker image ls | grep {{ DTR_Version | regex_replace('^([a-z]*\/[a-z]*):[\.0-9]*$', '\1') }} \
      | grep {{ DTR_Version | regex_replace('^[a-z]*\/[a-z]*:([\.0-9]*)$', '\1')}} | wc -l
    register: preloaded
    failed_when: preloaded.stdout|int == 0
#    failed_when: "{{ preloaded.stdout[0] }} != dtr_bundle_image_count"
    ignore_errors: True
    when:
      - offline_install
  #"docker/ucp:2.2.3"
  # convert "ansible" to "able"
  # {{ 'ansible' | regex_replace('^a.*i(.*)$', 'a\\1') }}

  # convert "foobar" to "bar"
  # {{ 'foobar' | regex_replace('^f.*o(.*)$', '\\1') }}
  - name: Copy offline DTR image to the remote machine
    copy:
      src={{ DTR_zip }} dest=/tmp/
    when:
      - preloaded|failure
  - name: Load offline DTR image
    shell: docker load -i /tmp/{{ DTR_zip | basename }}
    when:
      - preloaded|failure
  when:
    - deployed|failure
    - offline_install
# end block
- name: Install DTR (download on demand if not preloaded)
  shell: >
    docker run -t --rm {{ DTR_Version }} install \
    --ucp-node "{{ hostvars[groups['DTR-Initial'][0]].ansible_default_ipv4.address }}" \
    --ucp-insecure-tls \
    --ucp-username {{ UCP_Admin }} --ucp-password {{ UCP_Admin_Pass }} \
    --ucp-url "https://{{ hostvars[groups['UCP-Initial'][0]].ansible_default_ipv4.address }}:{{ UCP_Port }}"
#   --nfs-storage-url {{ DTR_NFS_URL }}
  when:
    - deployed|failure
- name: capture DTR replica ID
  shell: >
    docker ps|grep dtr-nginx|awk '{print $NF}' | cut -d'-' -f3
  register: replicaid
